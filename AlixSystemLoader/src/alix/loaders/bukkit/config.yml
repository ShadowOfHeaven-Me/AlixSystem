#------------------------------------------------------------------------------------#
#             This is the config.yml file for AlixSystem, divided by sections.       #
#     If you're curious about certain parameters, you can join our discord server    #
#          at https://discord.gg/bWjmA7s3xV or visit the spigot documentation        #
#                            of this plugin available at                             #
#    https://www.spigotmc.org/resources/alixsystem.109144/field?field=documentation  #
#------------------------------------------------------------------------------------#


#-----------------------------------------------#
#                  PRE-REGISTER                 #
#-----------------------------------------------#

#Config used when an unregistered player has not joined the server yet, but is trying to

#Highly recommended, as it's greatly optimized and prevents one-time connections for unregistered players (which are common in bot attacks)
prevent-first-time-join: true
#Used to help determine the starting size of the connecting users list
connection-list-size: 500
#Defines how long (in seconds) should a connection be stored for until it is forgotten (Used for 'prevent-first-time-join')
forget-connection-in: 60
#Defines whether an unregistered player should be required to ping the server before joining (add the server to the server list and refresh it, can stop primitive bot attacks)
#Setting this to true is currently not recommended, since it doesn't provide much more safety and can be annoying to your players
ping-before-join: false
#Used if the parameter above is set to true to define the maximum number of remembered pings - a ping will be forgotten only when this list's size amount of connections will be made
ping-list-size: 500
#Defines how much accounts in total should be a player allowed to have (counted by their ip), set it to 0 or less if you want to disable it (usually works as an antibot safety measure when the botter uses a single IP to send the bots)
max-total-accounts: 1
#Prevents unregistered players from logging in using a VPN (designed with the main purpose of preventing players bypassing the limit of 'max-total-accounts' by using VPNs, but may also work a bot counter-measurement)
anti-vpn: true
#Defines whether bot attack detection algorithms should be enabled in pair with a fast-blocking FireWall system. Works best with 'prevent-first-time-join' and 'anti-vpn' set to true, and 'max-total-accounts' at 1.
antibot-service: true


#----------------------------------------------#
#                   CAPTCHA                    #
#----------------------------------------------#

#Config used when the player is completing the captcha verification (before he's given the ability to register his account)

#Defines whether an unregistered player should be required to complete a captcha before registering (works as a safety measure against bot attacks, offline mode only)
captcha: true
#Defines the visual representation type of the captcha that will be shown to the tested player. Available:
#smooth - Recommended, as it's highly performant, will always be shown to the user (unlike particle for example), and is the most secure option out here
#particle - Creates a particle image representing the captcha. The player is not given blindness with this captcha (The safest option. It's pretty lightweight (about ~0.01ms per refresh), but technically still the heaviest of the options)
#map (Currently temporarily disabled) - Gives the player a map item with the given captcha (a decently safe one)
#subtitle - Shows the captcha with a subtitle (mediocre in terms of safety)
#message - Sends a message to the player with the given captcha (mediocre in terms of safety, and can be missed by the user)
captcha-visual-type: smooth
#Available:
#numeric - The captcha is a number between 0 and 10^5 - 1 (referring to the default captcha length of 5)
#text - The captcha is a five letter text (referring to the default captcha length of 5)
captcha-type: text
#Defines the range (in ASCII) of possible symbols in the text captcha (will not work for non-literal chars & ranges greater than the total of 32767)
#Any arguments after ";e=" symbolize singular characters excluded from the ranges. 'M' & 'W' are always excluded, as they're too big.
captcha-text-chars-range: a-z, A-Z, 1-9 ;e= I, l, O
#Defines the font used for character rendering in a drawable captcha
captcha-font: Arial
#Defines how big the drawn characters are
captcha-font-size: 30
#Defines (in degrees) the maximum random rotation of the letters on a drawable captcha (in both directions)
captcha-max-random-rotation: 30
#Defines the length of the captcha (min of 1, max of 5)
captcha-length: 5
#Defines whether captcha should be case-sensitive (not recommended, as whether the letters are capital can sometimes be hard to tell)
captcha-case-sensitive: false
#Defines how many times the player can enter the incorrect captcha before being kicked out (setting it to a high number could be risky because of bot attacks)
max-captcha-attempts: 1
#Defines (in seconds) how long should a player allowed to be on the server without completing the captcha test before being kicked out
max-captcha-time: 45


#----------------------------------------------#
#                    LOGIN                     #
#----------------------------------------------#

#Config used when the player is in the login phase, either trying to login in or register

#Defines whether the blindness effect should be applied to the player during verification (blindness won't be applied if the user is undergoing smooth or particle captcha verification)
verification-blindness: true
#Defines whether the players who joined with the same ip as before should be automatically logged in (this may cause problems for VPN users). This value is used as the default if the given user does not specify it himself.
auto-login: true
#Defines whether the ip autologin should be forcefully disabled. This option overrides the user's /account settings
forcefully-disable-auto-login: false
#Defines how long (in seconds) should be a player allowed to be on the server not logged in (but with the captcha test completed, setting it to 0 or less doesn't work for now)
max-login-time: 75
#Defines whether, if the server is set to offline mode, the players should be required to log in using a set beforehand password
offline-login-requirement: true
#Defines whether the player should be kicked when the entered password is incorrect (setting it to false could be risky because of password crackers)
max-login-attempts: 1
#Defines the way the passwords set by the users will be hashed in by default
# 0 - No hash, not recommended in case of password leaks
# 1 - Mixes character's code point, very fast but possibly repeatable, stored in a 32-bit integer
# 2 - Uses uuid's bit generation & MD5 hashing, takes more computing time, stored in a 64-bit integer
# 3 - Uses uuid's bit generation & SHA-256 hashing, most secure of all the options, stored in a 64-bit integer
password-hash-type: 3
#Defines whether a user should be shown the "Login automatically?" gui, with the ability to configure his ip autologin, right after registering
auto-ip-autologin-ask: true
#Requires FastLogin (https://ci.codemc.io/job/Games647/job/FastLogin/changes), but allows premium users to join without the need of registering or logging in
premium-auto-in: true
#Defines the commands invoked after a successful register. Specified in the form of a list. Replaces all %name% with the player's name. If "-p" is placed at the end of a command it will be invoked with the player as the sender.
#Invoked after a manual register
#An example would be
#- "say 3333 %name% -p".
after-register-commands:
#Works exactly the same as the parameter above with the sole difference of being invoked after a successful, manual login
after-login-commands:
#Works exactly like the parameters above but invoked on an automatic register (premium register)
after-auto-register-commands:
#Works exactly like the parameters above but invoked on an automatic login (premium login or ip auto-login)
after-auto-login-commands:


#----------------------------------------------#
#                     GUI                      #
#----------------------------------------------#

#Config used when the player is in the login phase, either trying to login in or register, but by using a GUI

#Defines the default way the users have to register/log in. Available:
# command - The user registers/logs in using the traditional password typed in the login command
# anvil (1.14+) - The user registers/logs in using an anvil rename gui
# pin (1.14+) - The user registers/logs in using a pin gui
password-type: command
#Defines whether the player should have his pin checked the moment he types the last digit, without the need of clicking the CONFIRM button
pin-auto-confirm: true
#Defines the background item in all guis
background-item: gray_stained_glass_pane
#Defines the item type used for the pin gui's digits. Available:
# wooden_skull - The built-in wooden skull
# chat_stone_skull - The built-in stone skull with a visible contrast between the darker background and the brighter digit
# plush_skull - The built-in skull with a bright expression and each digit being a different color
# quartz_skull - The built-in inverse of the "chat_stone" skull - The digit is darker with a brighter background
# <Material> - Any given valid material (e. g. red_wool, diamond_sword, dirt, oak_leaves etc.)
pin-digit-item-type: wooden_skull
#Defines the item amount for the pin digits
# <Number> - Any given positive number, up to 64
# digit_equivalent - The item amount will be the exact same as the pin's digit
pin-digit-item-amount: 1
#Defines the item amount for the '0' digit in the pin login, as 'digit_equivalent' would result in no item
pin-digit-zero-item-amount: 1


#----------------------------------------------#
#                    CHAT                      #
#----------------------------------------------#

#Config used for chat management

#Defines (in milliseconds) the minimum delay between chat messages (set it to zero or less if you want to disable it)
chat-delay: -1
#Defines the chat format, where the first '%s' is the player's name, and the second '%s' is the message.
chat-format: "%s&7: %s"
#If you already have a chat plugin then you can disable AlixSystem's intervention by setting this parameter to false (works only for chat format, chat delay is unaffected)
use-this-syntax: false


#------------------------------------------------#
#                   UTILITIES                    #
#------------------------------------------------#

#Config used for the overall set-up

#(Deprecated)
#Available: en (English) & pl (Polski) - Only used for system messages (the messages that are not customizable in the messages.txt file)
language: en
#Defines whether, instead of the normal console join log, an Alix one should be used instead (configurable in the messages.txt file)
custom-join-log: true
#As the name suggests, it will hide any failed join attempts (such as unlisted, banned players etc.) from the console in order to avoid spam
hide-failed-join-attempts: true
#Defines whether Alix should override other commands with it's own implementation (if set to true you can disable the ones you don't want in the commands.txt file)
override-existing-commands: false
#Defines (in seconds) in what period of time should the teleportation request automatically expire (set it to 0 or less if you want to disable it)
tpa-auto-expire: 120
#Prefix of the messages sent by this plugin.
prefix: "&c[System] > &7"
#Defines whether the prefix should be appended to messages sent by this plugin
append-prefix: true
#Defines (in milliseconds) the teleportation delay for user teleports (such as /tpa, /spawn etc.)
user-teleportation-delay: 5000
#Defines whether the /op and /deop commands should require a password (except when the console is executing it)
restrict-op-command: false
#Password required for /op and /deop commands if the parameter above is set to true
op-command-password: ILikePie

#------------------------------------------------#
#                   TECHNICAL                    #
#------------------------------------------------#

#Config used for the very technical features of this plugin

#Checks the server's compatibility with Alix and gives feedback in the console right after enabling
check-server-compatibility: true
#(Deprecated)
#Defines whether debug messages should be sent (usually helps the developer in identifying the source of an error)
debug: false
#Defines whether all important data should be asynchronously saved every time a world is saved (if set to false the important data will be saved once the plugin or the server are disabled - This is however not recommended, because things such as server crashes may corrupt the saved data)
auto-save: true